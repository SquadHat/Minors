-- Load Kavo UI library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Hunting Nigga Rebirth", "DarkTheme")

-- Function to teleport to an item and trigger a fireproximity prompt
local function teleportToItem(itemPart)
    local player = game.Players.LocalPlayer
    local char = player.Character
    local origPos = char.HumanoidRootPart.CFrame

    -- Teleport to the item
    char:SetPrimaryPartCFrame(CFrame.new(itemPart.Position))

    -- Wait for a short duration before teleporting back to avoid interference
    wait(0.15)

    -- Teleport back to the original position
    char:SetPrimaryPartCFrame(origPos)

    -- Fire the proximity prompt on the item
    local itemPrompt = itemPart:FindFirstChild("PickupPrompt")
    if itemPrompt then
        fireproximityprompt(itemPrompt)
    end
end

-- Create a new Kavo UI tab for Main
local MainTab = Window:NewTab("Main")
local MainSection = MainTab:NewSection("Weapons")

-- List of weapon names to teleport to
local weapons = {
    "Axe",
    "Pipe",
    "Crowbar",
    "Mine",
    "Shotgun",
    "Pistol",
    "Volt",
}

-- Dropdown to select the weapon
local selectedWeapon = weapons[1] -- Default to the first weapon in the list
MainSection:NewDropdown("Select Weapon", "Choose a weapon to teleport to", weapons, function(weaponName)
    selectedWeapon = weaponName
end)

-- Button to trigger the teleport to the selected weapon
MainSection:NewButton("Teleport to Selected Weapon", "Teleport to the selected weapon and pick it up", function()
    local weaponPart = workspace.Pickups[selectedWeapon .. "Pickup"].Pickup
    if weaponPart then
        teleportToItem(weaponPart)
    else
        warn("Weapon not found:", selectedWeapon)
    end
end)

local MainSection2 = MainTab:NewSection("Items")

-- List of item names to teleport to
local items = {
    "Medkit",
    "Cola",
    "Battery",
    "Radio Parts",
}

-- Table to map item names to their corresponding path names
local itemPaths = {
    ["Medkit"] = "MedkitPickup", -- Example: "Medkit" item has a path "MedkitPickup"
    ["Cola"] = "ColaPickup",
    ["Battery"] = "BatteryPickup",
    ["Radio Parts"] = "ObjPickup",-- Example: "Cola" item has a path "ColaPickup"
    -- Add more mappings as needed for other items
}

-- Dropdown to select the item
local selectedItem = items[1] -- Default to the first item in the list
MainSection2:NewDropdown("Select Item", "Choose an item to teleport to", items, function(itemName)
    selectedItem = itemName
end)

-- Button to trigger the teleport to the selected item
MainSection2:NewButton("Teleport to Selected Item", "Teleport to the selected item and pick it up", function()
    local itemPart = workspace.Pickups[itemPaths[selectedItem]].Pickup
    if itemPart then
        teleportToItem(itemPart)
    else
        warn("Item not found:", selectedItem)
        end
    end)

-- Create a new Kavo UI tab for ESP
local EspTab = Window:NewTab("ESP")
local EspSection = EspTab:NewSection("Crawlers")

-- ESP Toggle Function
local espEnabled = false
local espLabels = {} -- Table to store the ESP labels

local function createEspLabels()
    if espEnabled then
        -- Create ESP labels for existing entities
        local entities = game.workspace.Entities:GetChildren()
        entities[#entities + 1] = workspace.Entities2:FindFirstChild("ZERO") -- Add "ZERO" entity
        for entityName, color in pairs({
            ["Crawler"] = Color3.new(1, 0, 0),         -- Red
            ["DreadCrawler"] = Color3.new(0.39, 0, 0), -- Dark Red
            ["Arachnicrawler"] = Color3.new(1, 1, 1),  -- White
            ["Wretch"] = Color3.new(0, 1, 0),          -- Green
            ["ExoCrawler"] = Color3.new(1, 0.65, 0),   -- Orange
            ["ZERO"] = Color3.fromRGB(220, 20, 60),    -- Crimson
        }) do
            for _, entity in ipairs(entities) do
                if entity.Name == entityName and entity:FindFirstChild("UpperTorso") then
                    local label = Instance.new("BillboardGui", entity.UpperTorso)
                    label.Size = UDim2.new(0, 100, 0, 30)
                    label.StudsOffset = Vector3.new(0, 3, 0) -- Adjust the offset to position the label above the head
                    label.AlwaysOnTop = true

                    local textLabel = Instance.new("TextLabel", label)
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.Text = entityName
                    textLabel.TextColor3 = color
                    textLabel.TextSize = 20
                    textLabel.Font = Enum.Font.SourceSansBold

                    espLabels[entity] = label
                end
            end
        end

        -- Function to check and create ESP labels for new entities
        local function checkAndCreateESP()
            if espEnabled then
                local entities = game.workspace.Entities:GetChildren()
                entities[#entities + 1] = workspace.Entities2:FindFirstChild("ZERO") -- Add "ZERO" entity
                for entityName, color in pairs({
                    ["Crawler"] = Color3.new(1, 0, 0),         -- Red
                    ["DreadCrawler"] = Color3.new(0.39, 0, 0), -- Dark Red
                    ["Arachnicrawler"] = Color3.new(1, 1, 1),  -- White
                    ["Wretch"] = Color3.new(0, 1, 0),          -- Green
                    ["ExoCrawler"] = Color3.new(1, 0.65, 0),   -- Orange
                    ["ZERO"] = Color3.fromRGB(220, 20, 60),    -- Crimson
                }) do
                    for _, entity in ipairs(entities) do
                        if entity.Name == entityName and entity:FindFirstChild("UpperTorso") and not espLabels[entity] then
                            local label = Instance.new("BillboardGui", entity.UpperTorso)
                            label.Size = UDim2.new(0, 100, 0, 30)
                            label.StudsOffset = Vector3.new(0, 3, 0) -- Adjust the offset to position the label above the head
                            label.AlwaysOnTop = true

                            local textLabel = Instance.new("TextLabel", label)
                            textLabel.Size = UDim2.new(1, 0, 1, 0)
                            textLabel.BackgroundTransparency = 1
                            textLabel.Text = entityName
                            textLabel.TextColor3 = color
                            textLabel.TextSize = 20
                            textLabel.Font = Enum.Font.SourceSansBold

                            espLabels[entity] = label
                        end
                    end
                end
            end
        end

        -- Start the loop to check and create ESP labels for new entities
        spawn(function()
            while espEnabled do
                wait(1) -- Adjust the interval (in seconds) between checks
                checkAndCreateESP()
            end
        end)
    else
        -- Disable ESP labels for existing entities
        for entity, label in pairs(espLabels) do
            label:Destroy()
            espLabels[entity] = nil
        end
    end
end

EspSection:NewToggle("ESP Crawlers", "Toggle ESP for crawlers", function(state)
    espEnabled = state
    createEspLabels()
end)

-- Create a new Kavo UI tab for Misc
local MiscTab = Window:NewTab("Misc")
local MiscSection = MiscTab:NewSection("Miscellaneous")

-- Button to build the radio
MiscSection:NewButton("Build Radio", "Require Radio Parts", function()
    local player = game.Players.LocalPlayer
    local char = player.Character
    local origPos = char.HumanoidRootPart.CFrame

    local radioTable = workspace.Objective.RadioPrim and workspace.Objective.RadioPrim.Table
    if radioTable then
        -- Teleport to the radioTable.Position
        char:SetPrimaryPartCFrame(CFrame.new(radioTable.Position))

        -- Wait for a short duration before triggering the prompt
        wait(0.1)

        -- Trigger the proximity prompt at the radioTable position for 3 times
        local buildPrompt = workspace.Objective.RadioPrim.Prim.BuildPrompt
        if buildPrompt then
            for i = 1, 3 do
                fireproximityprompt(buildPrompt)
                wait(0.1) -- Adjust this wait time (in seconds) if necessary to control the speed of the prompts.
            end
        else
            warn("Build prompt not found.")
        end
        wait(2)
        -- Teleport back to the original position
        char:SetPrimaryPartCFrame(origPos)
    else
        warn("Radio table not found.")
    end
end)

-- Create manual game end
MiscSection:NewButton("End Game", "Teleport back to lobby and also give you xp without wasting time, doesn't work for victory", function()
    workspace.GameSetting.GameEnded.Value = true
end)

-- Create a toggle button for day/night in Misc tab
MiscSection:NewToggle("Toggle Day/Night", "Toggle between day and night", function(state)
    workspace.GameSetting.NightTime.Value = not state
end)

local function onKeyPressed(key, damageMultiplier)
    if key == "g" then
        local player = game.Players.LocalPlayer
        local args = {
            [1] = "UseItem",
            [2] = workspace:WaitForChild(player.Name)
        }

        -- Apply the damage multiplier if enabled
        if damageMultiplierEnabled then
            for i = 1, damageMultiplier do
                game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("PrimaryEvent"):FireServer(unpack(args))
                wait() -- Adjust this wait time (in seconds) if necessary to control the speed of the hits.
            end
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("PrimaryEvent"):FireServer(unpack(args))
        end
    end
end

-- Crawler damage multiplier variables
local crawlerDamageMultiplier = 1
local connectionsCrawlerMultiplier = {}

-- Function to handle the Crawler Damage Multiplier change
local function handleCrawlerDamageMultiplier(value)
    if crawlerDamageMultiplier ~= value then
        crawlerDamageMultiplier = value

        -- Update the number of connections based on the crawlerDamageMultiplier value
        local currentConnections = #connectionsCrawlerMultiplier
        if currentConnections < crawlerDamageMultiplier then
            for i = currentConnections + 1, crawlerDamageMultiplier do
                connectionsCrawlerMultiplier[i] = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                    onKeyPressed(key, crawlerDamageMultiplier)
                end)
            end
        elseif currentConnections > crawlerDamageMultiplier then
            for i = currentConnections, crawlerDamageMultiplier + 1, -1 do
                connectionsCrawlerMultiplier[i]:Disconnect()
                connectionsCrawlerMultiplier[i] = nil
            end
        end
    end
end

-- Function to auto-kill crawlers with the given damage multiplier
local function autoKillCrawlers(damageMultiplier)
    local crawlerNames = {
        "Crawler",
        "DreadCrawler",
        "Arachnicrawler",
        "Wretch",
        "ExoCrawler",
    }

    local zeroEntity = workspace.Entities2:FindFirstChild("ZERO")

    local player = game.Players.LocalPlayer
    local char = player.Character
    local humanoid = char and char:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return
    end

    -- Store the original position before teleporting
    local origPos = char.HumanoidRootPart.CFrame

    -- Function to kill crawlers at the target position
    local function killCrawlers(targetPosition)
        char:SetPrimaryPartCFrame(CFrame.new(targetPosition))

        wait(0.1) -- Wait for a short duration before triggering the hit
        for i = 1, damageMultiplier do
            onKeyPressed("g", damageMultiplier)
            wait() -- Adjust this wait time (in seconds) if necessary to control the speed of the hits.
        end

        wait(0.22) -- Wait for a short duration before teleporting back
        char:SetPrimaryPartCFrame(origPos)
    end

    -- Function to handle killing the "ZERO" entity
    local function killZero()
        if zeroEntity and zeroEntity:FindFirstChild("UpperTorso") then
            local targetPosition = zeroEntity.UpperTorso.Position
            killCrawlers(targetPosition)
        end
    end

    -- Function to handle killing the regular crawlers
    local function killRegularCrawlers()
        for _, crawlerName in ipairs(crawlerNames) do
            local crawler = game.workspace.Entities:FindFirstChild(crawlerName)
            if crawler and crawler:FindFirstChild("UpperTorso") then
                local targetPosition = crawler.UpperTorso.Position
                killCrawlers(targetPosition)
            end
        end
    end

    -- Call the functions to kill crawlers and "ZERO"
    killRegularCrawlers()
    killZero() -- Check and kill "ZERO" entity if it exists
end

-- Create a slider for Crawler Damage Multiplier in Misc tab
local DamageMultiplierSlider = MiscSection:NewSlider("Auto Kill (DM)", "Set the damage multiplier for auto-killing crawlers", 64, 1, function(value)
    handleCrawlerDamageMultiplier(value)
end)

-- Auto Kill Crawlers toggle (This will also serve as the "Enable Damage Multiplier (G)" toggle)
local autoKillEnabled = false
MiscSection:NewToggle("Auto Kill Crawlers", "Toggle to automatically kill crawlers", function(state)
    autoKillEnabled = state
    if autoKillEnabled then
        while autoKillEnabled do
            autoKillCrawlers(crawlerDamageMultiplier) -- Pass the damage multiplier to the function
            wait(1) -- Adjust the interval (in seconds) between killing crawlers
        end
    end
end)

-- Create a new section for Damage Multiplier in Misc tab
local DamageMultiplierSection = MiscTab:NewSection("Damage Multiplier")
DamageMultiplierSection:NewLabel("You need pipe for this")

-- Damage multiplier variables
local damageMultiplier = 1
local damageMultiplierEnabled = false
local connectionsMultiplier = {}

-- Function to handle the Damage Multiplier change
local function handleDamageMultiplier(value)
    if damageMultiplier ~= value then
        damageMultiplier = value

        if damageMultiplierEnabled then
            -- Update the number of connections based on the damageMultiplier value
            local currentConnections = #connectionsMultiplier
            if currentConnections < damageMultiplier then
                for i = currentConnections + 1, damageMultiplier do
                    connectionsMultiplier[i] = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(onKeyPressed)
                end
            elseif currentConnections > damageMultiplier then
                for i = currentConnections, damageMultiplier + 1, -1 do
                    connectionsMultiplier[i]:Disconnect()
                    connectionsMultiplier[i] = nil
                end
            end
        end
    end
end

-- Function to toggle the Damage Multiplier
local function toggleDamageMultiplier(state)
    damageMultiplierEnabled = state

    if damageMultiplierEnabled then
        -- Connect the "g" button event with the damage multiplier
        for i = 1, damageMultiplier do
            connectionsMultiplier[i] = game.Players.LocalPlayer:GetMouse().KeyDown:Connect(onKeyPressed)
        end
    else
        -- Disconnect the "g" button event with the damage multiplier
        for _, connection in ipairs(connectionsMultiplier) do
            connection:Disconnect()
        end
        connectionsMultiplier = {}
    end
end

-- Create a slider for Damage Multiplier in Misc tab
DamageMultiplierSection:NewSlider("Damage Multiplier", "Set the damage multiplier for hitting", 64, 1, function(value)
    handleDamageMultiplier(value)
end)

-- Create a toggle button for Damage Multiplier in Misc tab
DamageMultiplierSection:NewToggle("Enable Damage Multiplier (G)", "Press G key to Attack", function(state)
    toggleDamageMultiplier(state)
end)

-- Creating Settings

local Settings = Window:NewTab("Settings")

local SettingSection = Settings:NewSection("Keybind")
SettingSection:NewKeybind("UI", "Toggle UI", Enum.KeyCode.K, function()
	Library:ToggleUI()
end)

SettingSection:NewSlider("Max Zoom Distance", "Set the damage multiplier for hitting", 64, 1, function(value)
    handleDamageMultiplier(value)
end)
